{
  "address": "0x2fa7d3f7a2cB9fBa2232dc0b708dc8C0b40dedb4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x6d06085ac9000d8efc5a2afb7307b9add1b63a46691837fc6dfb87723004088c",
  "receipt": {
    "to": null,
    "from": "0x5E3dfBfb7293ed645360d73B17844D50baa6daFE",
    "contractAddress": "0x2fa7d3f7a2cB9fBa2232dc0b708dc8C0b40dedb4",
    "transactionIndex": 81,
    "gasUsed": "972070",
    "logsBloom": "0x
    "blockHash": "0xfcdcaf6bbd9f57632ea2d15d63f249748f28b2bf0ae727f241e88d91fbcd7e8d",
    "transactionHash": "0x6d06085ac9000d8efc5a2afb7307b9add1b63a46691837fc6dfb87723004088c",
    "logs": [],
    "blockNumber": 4912116,
    "cumulativeGasUsed": "8925687",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 2,
  "solcInputHash": "634134709fae2468ca119f28dbccd6a9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Alvan N.C\",\"details\":\"This implements price feed as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"this function impleemt the proce feed library\"},\"withdraw()\":{\"details\":\"this is only accessible by the contract owner\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds the the contract\"},\"withdraw()\":{\"notice\":\"this functio withdraws fund from the contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Fundme.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/Fundme.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport \\\"contracts/PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**\\n * @title A contract for crowd funding\\n * @author Alvan N.C\\n * @notice This contract is to demo a sample funding contract\\n * @dev This implements price feed as our library\\n */\\ncontract FundMe {\\n    //Type Declaration\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address private immutable i_owner;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier ownerOnly() {\\n        // require(msg.sender == owner, \\\"Sender is not owner\\\");\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /**\\n     * @notice This function funds the the contract\\n     * @dev this function impleemt the proce feed library\\n     */\\n    function fund() public payable {\\n        // set the ether value to greater than 1 Ether\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough ether\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    /**\\n     * @notice this functio withdraws fund from the contract\\n     * @dev this is only accessible by the contract owner\\n     */\\n    function withdraw() public ownerOnly {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        // Tranfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n\\n        //send\\n\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess,\\\"send failed\\\");\\n\\n        (bool callSucceess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSucceess, \\\"call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable ownerOnly {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address funder\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x342ba3cb4dc49d52bb114512090790b9689489c8df5183af66a4cffa3038d24a\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n\\nlibrary PriceConverter {\\n    \\n    function getPrice(AggregatorV3Interface priceFeed) internal  view returns (uint256) {\\n        // Adress: 0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        // ABI \\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n        (, int256 answer,,,) = priceFeed.latestRoundData();\\n\\n        return uint256(answer * 1e10);\\n    }\\n\\n    function getVersion() internal view returns(uint256) {\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n        return priceFeed.version();\\n    }\\n\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return  ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0xf060d0a6440f69f3047c1d35ff8dc94f735441380f32540e93ef4f42316ff894\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620011b5380380620011b583398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b608051611035620001806000396000818161033201528181610581015281816105d101526107c701526110356000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c146101815761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a7b565b6102e7565b6040516100cc9190610ac1565b60405180910390f35b3480156100e157600080fd5b506100ea610330565b005b3480156100f857600080fd5b50610101610570565b60405161010e9190610ac1565b60405180910390f35b34801561012357600080fd5b5061012c61057d565b6040516101399190610aeb565b60405180910390f35b34801561014e57600080fd5b506101576105a5565b6040516101649190610b65565b60405180910390f35b6101756101be565b005b61017f6105cf565b005b34801561018d57600080fd5b506101a860048036038101906101a39190610bac565b61085d565b6040516101b59190610aeb565b60405180910390f35b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108a490919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c36565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b5576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104605760008082815481106103da576103d9610c56565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045890610cb4565b9150506103b8565b50600067ffffffffffffffff81111561047c5761047b610cfc565b5b6040519080825280602002602001820160405280156104aa5781602001602082028036833780820191505090505b50600090805190602001906104c0929190610971565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104e790610d5c565b60006040518083038185875af1925050503d8060008114610524576040519150601f19603f3d011682016040523d82523d6000602084013e610529565b606091505b505090508061056d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056490610dbd565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610654576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106d757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161068d575b5050505050905060005b81518110156107625760008282815181106106ff576106fe610c56565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075a90610cb4565b9150506106e1565b50600067ffffffffffffffff81111561077e5761077d610cfc565b5b6040519080825280602002602001820160405280156107ac5781602001602082028036833780820191505090505b50600090805190602001906107c2929190610971565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080990610d5c565b60006040518083038185875af1925050503d8060008114610846576040519150601f19603f3d011682016040523d82523d6000602084013e61084b565b606091505b505090508061085957600080fd5b5050565b600080828154811061087257610871610c56565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108b0836108e0565b90506000670de0b6b3a764000085836108c99190610ddd565b6108d39190610e4e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561092e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109529190610f0c565b5050509150506402540be400816109699190610f87565b915050919050565b8280548282559060005260206000209081019282156109ea579160200282015b828111156109e95782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610991565b5b5090506109f791906109fb565b5090565b5b80821115610a145760008160009055506001016109fc565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a4882610a1d565b9050919050565b610a5881610a3d565b8114610a6357600080fd5b50565b600081359050610a7581610a4f565b92915050565b600060208284031215610a9157610a90610a18565b5b6000610a9f84828501610a66565b91505092915050565b6000819050919050565b610abb81610aa8565b82525050565b6000602082019050610ad66000830184610ab2565b92915050565b610ae581610a3d565b82525050565b6000602082019050610b006000830184610adc565b92915050565b6000819050919050565b6000610b2b610b26610b2184610a1d565b610b06565b610a1d565b9050919050565b6000610b3d82610b10565b9050919050565b6000610b4f82610b32565b9050919050565b610b5f81610b44565b82525050565b6000602082019050610b7a6000830184610b56565b92915050565b610b8981610aa8565b8114610b9457600080fd5b50565b600081359050610ba681610b80565b92915050565b600060208284031215610bc257610bc1610a18565b5b6000610bd084828501610b97565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682065746865720000000000000000600082015250565b6000610c20601883610bd9565b9150610c2b82610bea565b602082019050919050565b60006020820190508181036000830152610c4f81610c13565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cbf82610aa8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610cf157610cf0610c85565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d46600083610d2b565b9150610d5182610d36565b600082019050919050565b6000610d6782610d39565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610da7600b83610bd9565b9150610db282610d71565b602082019050919050565b60006020820190508181036000830152610dd681610d9a565b9050919050565b6000610de882610aa8565b9150610df383610aa8565b9250828202610e0181610aa8565b91508282048414831517610e1857610e17610c85565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e5982610aa8565b9150610e6483610aa8565b925082610e7457610e73610e1f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e9e81610e7f565b8114610ea957600080fd5b50565b600081519050610ebb81610e95565b92915050565b6000819050919050565b610ed481610ec1565b8114610edf57600080fd5b50565b600081519050610ef181610ecb565b92915050565b600081519050610f0681610b80565b92915050565b600080600080600060a08688031215610f2857610f27610a18565b5b6000610f3688828901610eac565b9550506020610f4788828901610ee2565b9450506040610f5888828901610ef7565b9350506060610f6988828901610ef7565b9250506080610f7a88828901610eac565b9150509295509295909350565b6000610f9282610ec1565b9150610f9d83610ec1565b9250828202610fab81610ec1565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610fe357610fe2610c85565b5b8282058414831517610ff857610ff7610c85565b5b509291505056fea264697066735822122026f4115654e92d82470cbc459e09097d6e1901c0ee82b0cd2cf53fb2f76266bd64736f6c63430008130033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c146101815761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a7b565b6102e7565b6040516100cc9190610ac1565b60405180910390f35b3480156100e157600080fd5b506100ea610330565b005b3480156100f857600080fd5b50610101610570565b60405161010e9190610ac1565b60405180910390f35b34801561012357600080fd5b5061012c61057d565b6040516101399190610aeb565b60405180910390f35b34801561014e57600080fd5b506101576105a5565b6040516101649190610b65565b60405180910390f35b6101756101be565b005b61017f6105cf565b005b34801561018d57600080fd5b506101a860048036038101906101a39190610bac565b61085d565b6040516101b59190610aeb565b60405180910390f35b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108a490919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c36565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b5576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104605760008082815481106103da576103d9610c56565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045890610cb4565b9150506103b8565b50600067ffffffffffffffff81111561047c5761047b610cfc565b5b6040519080825280602002602001820160405280156104aa5781602001602082028036833780820191505090505b50600090805190602001906104c0929190610971565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104e790610d5c565b60006040518083038185875af1925050503d8060008114610524576040519150601f19603f3d011682016040523d82523d6000602084013e610529565b606091505b505090508061056d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056490610dbd565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610654576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106d757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161068d575b5050505050905060005b81518110156107625760008282815181106106ff576106fe610c56565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075a90610cb4565b9150506106e1565b50600067ffffffffffffffff81111561077e5761077d610cfc565b5b6040519080825280602002602001820160405280156107ac5781602001602082028036833780820191505090505b50600090805190602001906107c2929190610971565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080990610d5c565b60006040518083038185875af1925050503d8060008114610846576040519150601f19603f3d011682016040523d82523d6000602084013e61084b565b606091505b505090508061085957600080fd5b5050565b600080828154811061087257610871610c56565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108b0836108e0565b90506000670de0b6b3a764000085836108c99190610ddd565b6108d39190610e4e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561092e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109529190610f0c565b5050509150506402540be400816109699190610f87565b915050919050565b8280548282559060005260206000209081019282156109ea579160200282015b828111156109e95782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610991565b5b5090506109f791906109fb565b5090565b5b80821115610a145760008160009055506001016109fc565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a4882610a1d565b9050919050565b610a5881610a3d565b8114610a6357600080fd5b50565b600081359050610a7581610a4f565b92915050565b600060208284031215610a9157610a90610a18565b5b6000610a9f84828501610a66565b91505092915050565b6000819050919050565b610abb81610aa8565b82525050565b6000602082019050610ad66000830184610ab2565b92915050565b610ae581610a3d565b82525050565b6000602082019050610b006000830184610adc565b92915050565b6000819050919050565b6000610b2b610b26610b2184610a1d565b610b06565b610a1d565b9050919050565b6000610b3d82610b10565b9050919050565b6000610b4f82610b32565b9050919050565b610b5f81610b44565b82525050565b6000602082019050610b7a6000830184610b56565b92915050565b610b8981610aa8565b8114610b9457600080fd5b50565b600081359050610ba681610b80565b92915050565b600060208284031215610bc257610bc1610a18565b5b6000610bd084828501610b97565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682065746865720000000000000000600082015250565b6000610c20601883610bd9565b9150610c2b82610bea565b602082019050919050565b60006020820190508181036000830152610c4f81610c13565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cbf82610aa8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610cf157610cf0610c85565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d46600083610d2b565b9150610d5182610d36565b600082019050919050565b6000610d6782610d39565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610da7600b83610bd9565b9150610db282610d71565b602082019050919050565b60006020820190508181036000830152610dd681610d9a565b9050919050565b6000610de882610aa8565b9150610df383610aa8565b9250828202610e0181610aa8565b91508282048414831517610e1857610e17610c85565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e5982610aa8565b9150610e6483610aa8565b925082610e7457610e73610e1f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e9e81610e7f565b8114610ea957600080fd5b50565b600081519050610ebb81610e95565b92915050565b6000819050919050565b610ed481610ec1565b8114610edf57600080fd5b50565b600081519050610ef181610ecb565b92915050565b600081519050610f0681610b80565b92915050565b600080600080600060a08688031215610f2857610f27610a18565b5b6000610f3688828901610eac565b9550506020610f4788828901610ee2565b9450506040610f5888828901610ef7565b9350506060610f6988828901610ef7565b9250506080610f7a88828901610eac565b9150509295509295909350565b6000610f9282610ec1565b9150610f9d83610ec1565b9250828202610fab81610ec1565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610fe357610fe2610c85565b5b8282058414831517610ff857610ff7610c85565b5b509291505056fea264697066735822122026f4115654e92d82470cbc459e09097d6e1901c0ee82b0cd2cf53fb2f76266bd64736f6c63430008130033",
  "devdoc": {
    "author": "Alvan N.C",
    "details": "This implements price feed as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "this function impleemt the proce feed library"
      },
      "withdraw()": {
        "details": "this is only accessible by the contract owner"
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds the the contract"
      },
      "withdraw()": {
        "notice": "this functio withdraws fund from the contract"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}